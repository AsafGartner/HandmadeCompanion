---
title: "Episode Guide"
layout: "guide"
button_id: "guide"
---

<% twit = (name) -> "[@#{name}](https://twitter.com/#{name})" %>

*The detailed episode guides linked to on this page would
not have been possible without the generous contributions
of time and energy from
Jace Bennett (<%= twit "jacebennett" %>),
Abner Coimbre (<%= twit "AbnerCoimbre" %>),
Matthew VanDevander (<%= twit "mvandevander" %>, supportable on
[Patreon](https://www.patreon.com/mv)),
Gustavo Chavez (<%= twit "gusChvz" %>),
Kasper Sauramo (<%= twit "KMSchme" %>),
Ben Craddock (<%= twit "theinternetftw" %>),
Dustin Specht (<%= twit "Dustin_Specht" %>),
Jacob Pike (<%= twit "pikejd" %>),
Matt Mascarenhas (<%= twit "miblo_" %>),
Miguel Lech&oacute;n (<%= twit "debiatan" %>),
Cory Henderlite (<%= twit "effect0r" %>),
Insofaras (<%= twit "insofaras_" %>),
Clay Murray (<%= twit "powerc9000" %>) and
Tim Liou (<%= twit "wdliou" %>).*

*Matt (Miblo) is currently the sole maintainer, doing so live on
[Twitch](http://www.twitch.tv/miblo) and may be supported on
[Patreon](https://www.patreon.com/miblo).*

*Please take a moment to thank our
contributors if you happen to see them on The Twitters! :)*

### How to Use This Guide

Handmade Hero is broken up into four parts: a basic programming
introduction, the construction of a platform prototyping layer,
the coding of a game engine, and the coding of the game itself.
These parts can be fluid, and blur into one another, but if you
would like to skip directly to one of the parts without watching
the preceding ones, you may be able to do so, depending on your
level of experience.

- The basic (very limited) introduction to C programming is **Week 0**.

- The construction of a Win32 prototyping layer is **Weeks 1 through 5**.

- Game engine coding begins on **Week 6**.

- Game coding itself has not yet begun.

<% {categories} = @getFile({fullPath: $like: 'table_of_contents.yaml'}).toJSON() %>
<% for cat in categories: %>

### <%= cat.title %>
<%= cat.description %>

<ul>
<% for day in cat.days: %>
<li>

<% folder = cat.folder or '' %>
<% dayName = if typeof(day) == "string" then day else Object.keys(day)[0] %>
<% placeholder = if typeof(day) == "object" then day[dayName] else '' %>
<% likeDay = fullPath: $like: dayName %>
<% likeFolder = fullPath: $like: folder %>

<% pages = @getFiles(likeDay).findAll(likeFolder, [name:1]).toJSON() %>

<% if pages.length > 0: %>
 
 <% if dayName.match(/^day\d+$/i): %>
  <%= 'Day '+dayName.slice(3)+":" %>
 <% end %>
 
 <% if dayName.match(/^chat\d+$/i): %>
  <%= 'Chat '+dayName.slice(4)+":" %>
 <% end %>

 <% for page, i in pages: %>
  <% url = @rootPath() + page.url %>
  <% statustext = if (page.markers == undefined or page.markers.length==0) then ' - Annotations Incomplete' else '' %>

<% # Uses a hacky heuristic (no annotations prior to 00:30?) to find "Q&A Only" annotated vids %>
<% # Can and should be removed once all Q&A only annotated videos are fully annotated.  %>

  <% if(page.markers != undefined): %>
   <% qaonly = 1 %>
   <% for marker,thetxt of page.markers: %>
    <% timematch = marker.match(/^0?0?:?([0-9]{1,2}):[0-9]{1,2}$/) %>
     <% if timematch: %>
      <% if parseInt(timematch[1]) < 30: %>
       <% qaonly = 0 %>
       <% break %>
      <% end %>
     <% end %>
   <% end %>
   <% if qaonly == 1 then statustext = ' - Q&A Annotations Only' %>
  <% end %>
<% # End hacky Q&A block %>

  <% notesstatus = if page.content.length > 4 then " (With Notes)" else "" %>

  <% linktext = if page.basename.match(/qa/i) then 'Q&A' else page.title %>
  <% sep = if i < pages.length-1 then ' + ' else '' %>
  [<%= linktext %>](<%= url %>) <i><%= statustext %></i> <i><%= notesstatus %></i> <%= sep %>
 <% end %>
 
<% else if placeholder: %>
 <%= placeholder %>
<% else: %>
 <%= day %>
<% end %>

</li>
<% end %>

<% if cat.iker_url: %>
<li><a href="/jace/iker/<%= cat.iker_url %>">Iker's Weekly Illustration</a></li>
<% end %>

</ul>

<% end %>
